{"version":3,"sources":["components/Navigation/SideDrawer/SideDrawer.module.css","components/Photos/Photo/Photo.module.css","containers/Layout/Layout.module.css","components/UI/Input/input.module.css","components/Navigation/Toolbar/Toolbar.module.css","containers/PhotoData/PhotoData.module.css","components/UI/Button/Button.module.css","components/Photos/Photos.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","containers/Gallery/Gallery.module.css","containers/Login/Login.module.css","containers/Contact/Contact.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/Photos/PhotoViewer/PhotoViewer.module.css","assets/togaj_logo.png","components/Logo/Logo.module.css","assets/Images/togaj_logo_edited.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Button/Button.js","containers/Landing/Landing.js","components/UI/Spinner/Spinner.js","hoc/Auxilliary.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/withErrorHandler/withErrorHandler.js","hooks/http-error-handler.js","components/Photos/Photo/Photo.js","components/Photos/PhotoViewer/PhotoViewer.js","components/Photos/Photos.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Gallery/Gallery.js","store/actions/photos.js","containers/PhotoData/PhotoData.js","components/UI/Input/Input.js","containers/Login/Login.js","containers/Login/Logout/Logout.js","containers/Contact/Contact.js","store/actions/contact.js","App.js","store/utility.js","store/reducers/photos.js","store/reducers/auth.js","store/reducers/contact.js","index.js"],"names":["module","exports","button","props","disabled","className","classes","Button","btnType","join","onClick","clicked","children","Landing","src","alt","href","spinner","Loader","aux","backdrop","show","Backdrop","modal","modalClosed","Modal","style","transform","opacity","withErrorHandler","WrappedComponent","axios","HttpClient","useState","error","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","useEffect","eject","useHttpErrorHandler","clearError","message","Photo","imageUrl","Image","viewer","click","isAuth","isAdmin","delete","photoViewer","PhotoViewer","connect","state","isAuthenticated","auth","token","imageURL","setImageURL","imageID","setImageId","isDeleted","setIsDeleted","clicker","url","id","deleter","then","catch","console","log","pictureData","pictures","forEach","picture","sortCategory","imageCategory","push","key","photoUrl","category","view","loading","Spinner","to","Photos","viewing","viewHandlerClosed","logo","Logo","height","width","togajLogo","navigationItem","NavigationItem","link","exact","activeClassName","active","navigationItems","NavigationItems","isAdminUser","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","showSideDrawer","SetShowSideDrawer","header2","sort","uploading","header3","header","contact","img","Content","authSuccess","userId","type","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","photo","onFetch","get","fetchedData","data","_id","setViewing","setCategory","photograph","Gallery","cat","PhotoDiv","filePath","submitted","onPost","formDataFile","formData","post","headers","postPhotoSuccess","postPhotoFail","actions","file","setFile","setImageCategory","fileName","setFileName","previewSource","setPreviewSource","previewFile","reader","FileReader","readAsDataURL","onloadend","result","redirect","ContactData","onSubmit","event","preventDefault","FormData","append","required","onChange","photoFile","target","files","name","htmlFor","DropDown","value","input","inputElement","inputClasses","InputElement","inValid","shouldValidate","touched","Invalid","elementType","elementConfig","changed","options","map","option","displayValue","Input","Label","label","onAuth","email","password","adminCode","isSignUp","authData","Date","getTime","setItem","authFail","adminData","placeholder","validation","valid","minLength","maxLength","dataForm","setDataForm","formIsValid","setFormIsValid","setIsSignUp","errorMessage","adminElementsArray","config","adminElement","inputIdentifier","updatedDataForm","updatedFormElement","rules","isValid","trim","length","checkValidity","formIdentifier","inputChangedHandler","onLogout","onContact","userDatails","userDetails","messageId","contactData","phoneNumber","contactForm","setContactForm","contactElementsArray","Contact","icon","faPhoneAlt","faEnvelope","faClock","Form","contactElement","updatedContactForm","withRouter","onTryAutoSignUp","getItem","adminStatus","routes","path","component","Login","Logout","PhotoData","updateObject","oldObject","updatedProperties","initialState","filename","filepath","fetchStart","action","fetchSuccess","fetchFail","postPhotoStart","reducer","authStart","authLogout","contactStart","contactSuccess","contactFail","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducers","combineReducers","photoReducer","authReducer","contactReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0759381.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1jl-N\",\"Open\":\"SideDrawer_Open__3dTbu\",\"Close\":\"SideDrawer_Close__2cxGr\",\"Logo\":\"SideDrawer_Logo__3pNKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Photo\":\"Photo_Photo__3BLrc\",\"Image\":\"Photo_Image__3pFeH\",\"Button\":\"Photo_Button__fU1os\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__Ha9AW\",\"header2\":\"Layout_header2__2T10l\",\"header3\":\"Layout_header3__eYLed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__3ER8c\",\"Label\":\"input_Label__1GFw7\",\"InputElement\":\"input_InputElement__2GhBW\",\"Invalid\":\"input_Invalid__2Q9yQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__21wBV\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3KQzU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"PhotoData_Gallery__vGcCk\",\"ContactData\":\"PhotoData_ContactData__3G3Db\",\"DropDown\":\"PhotoData_DropDown__1oVpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ozcB\",\"enable\":\"Button_enable__1JP30\",\"Success\":\"Button_Success__3RnRB\",\"Danger\":\"Button_Danger__10DWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Photos\":\"Photos_Photos__4Wqgr\",\"Photo\":\"Photos_Photo__1oQoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1ZDqJ\",\"active\":\"NavigationItem_active__3e2Jy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"Gallery_Gallery__1saKQ\",\"PhotoDiv\":\"Gallery_PhotoDiv__3bzoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"Login_Gallery__3Mi5N\",\"ContactData\":\"Login_ContactData__2I_ND\",\"Input\":\"Login_Input__1qH-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__AG8JO\",\"Form\":\"Contact_Form__13m6Q\",\"Input\":\"Contact_Input__221aq\",\"TextArea\":\"Contact_TextArea__YOfpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1kJV8\",\"load2\":\"Spinner_load2__2J08P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2OoX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3GkTv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhotoViewer\":\"PhotoViewer_PhotoViewer__2KwTg\"};","module.exports = __webpack_public_path__ + \"static/media/togaj_logo.2cf1493e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__14guc\"};","module.exports = __webpack_public_path__ + \"static/media/togaj_logo_edited.8f901228.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3RxZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2wHc9\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button \r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>\r\n            {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\n// import logo from '../../assets/togaj-logo.jpg';\r\nimport './Landing.css';\r\n\r\nconst Landing = () => {\r\n    return(\r\n        <div className=\"Landing\" >\r\n            <img src=\"https://images.unsplash.com/photo-1506241537529-eefea1fbe44d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\" alt=\"alt\" />\r\n            <div>\r\n                <div className=\"welcome-text\">\r\n                    Welcome To Togaj Photography\r\n                </div>\r\n                <div className=\"Button\">\r\n                    <a href=\"/gallery\" ><Button btnType=\"Danger\"> Gallery </Button></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React from 'react';\r\n\r\nconst aux = (props) => (\r\n    <div>{props.children}</div>\r\n)\r\n\r\nexport default aux;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxilliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n// //The fontawesome embedded helps me select the icons i want to add\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faChevronCircleLeft, faChevronCircleRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst modal = (props) => (\r\n    <Aux>\r\n        <Backdrop show={props.show} clicked={props.modalClosed} />\r\n        <div \r\n            className={classes.Modal}\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n                {/* <FontAwesomeIcon icon={faChevronCircleLeft} /> */}\r\n                {props.children}\r\n                {/* <FontAwesomeIcon icon={faChevronCircleRight} /> */}\r\n        </div>\r\n    </Aux>\r\n)\r\n\r\nexport default modal;","import React from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxilliary';\r\nimport useHttpErrorHandler from '../../hooks/http-error-handler';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return props => {\r\n        const [error, clearError] = useHttpErrorHandler(axios);\r\n        return (\r\n            <Aux>\r\n                <Modal \r\n                show={error}\r\n                modalClosed={ clearError}>\r\n                    {error ? error.message  : null}\r\n                </Modal>\r\n                <WrappedComponent {...props} />\r\n            </Aux>\r\n        )\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import { useState, useEffect } from 'react';\r\n\r\nexport default HttpClient => {\r\n    \r\n    const [ error, setError ] = useState(null);\r\n\r\n        \r\n    const reqInterceptor = HttpClient.interceptors.request.use(req => {\r\n        setError(null);\r\n        return req;\r\n    })\r\n    const resInterceptor = HttpClient.interceptors.response.use(res => res, err => {\r\n        setError(err);\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        //Runs the above when it mounts\r\n        //Runs the below when it unmounts\r\n        return () => {\r\n            HttpClient.interceptors.request.eject(reqInterceptor);\r\n            HttpClient.interceptors.response.eject(resInterceptor);\r\n        };\r\n    }, [HttpClient.interceptors.request, HttpClient.interceptors.response, reqInterceptor, resInterceptor]);\r\n\r\n\r\n    const errorConfirmedhandler = () => {\r\n        setError(null);\r\n    }\r\n\r\n    return [error, errorConfirmedhandler];\r\n}","import React from 'react';\r\nimport classes from './Photo.module.css';\r\n\r\nconst Photo = (props) => {\r\n    const handleClick = () => {\r\n        props.viewer();\r\n        props.click();\r\n    }\r\n\r\n    return(\r\n        <div className={classes.Photo}>\r\n\r\n            <img \r\n                src={props.imageUrl} \r\n                alt=\"\"\r\n                className={classes.Image} />\r\n            {/* {props.category} */}\r\n            <button className={classes.Button} onClick={handleClick}> View Photo </button>\r\n            {props.isAuth && props.isAdmin && props.isAuth === props.isAdmin ? <button className={classes.Button} onClick={props.delete}> Delete Photo </button> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photo;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxilliary';\r\nimport classes from './PhotoViewer.module.css';\r\n\r\nconst photoViewer = (props) => {\r\n\r\n    return (\r\n        <Aux>\r\n            <img src={props.imageUrl} alt='' className={classes.PhotoViewer} />\r\n            {/*Add the EDIT and DELETE Buttons at the end of the development*/}\r\n            {/* <button>EDIT</button> \r\n            <button>DELETE</button> */}\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default photoViewer;","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxilliary';\r\n\r\nimport Photo from './Photo/Photo';\r\nimport classes from './Photos.module.css';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n\r\nimport Modal from '../UI/Modal/Modal';\r\nimport PhotoViewer from '../Photos/PhotoViewer/PhotoViewer';\r\nimport axios from 'axios';\r\n\r\nconst Photos = (props) => {\r\n    const [ imageURL, setImageURL ] = useState('');\r\n    const [ imageID, setImageId ] = useState('');\r\n    const [ isDeleted, setIsDeleted ] = useState(false);\r\n\r\n    const clicker = (url, id) => {\r\n        setImageURL(url);\r\n        setImageId(id);\r\n    }\r\n\r\n    const deleter = (id) => {\r\n        axios.delete(`http://localhost:3001/api/photos/${id}`)\r\n            .then(res => {\r\n                setIsDeleted(true);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                setIsDeleted(false);\r\n            });\r\n    };\r\n    \r\n    //I created the array that will hold what i want to render\r\n    let pictureData = [];\r\n\r\n    //The pictures will be fiiltered here\r\n    props.pictures.forEach(picture =>{\r\n        //The sortCategory will only be available after the click event is triggered.\r\n        if(props.sortCategory && props.sortCategory === picture.imageCategory){\r\n            pictureData.push(\r\n                <Photo \r\n                     key={picture.id}\r\n                     imageUrl={picture.photoUrl} \r\n                     category={picture.imageCategory} \r\n                     viewer={props.view}\r\n                     isAuth={props.isAuthenticated}\r\n                     isAdmin={props.isAdmin}\r\n                     click={()=>clicker(picture.photoUrl, picture.id)}\r\n                     delete={() => deleter(picture.id)} />\r\n            )\r\n        } else if(!props.sortCategory) {\r\n            pictureData.push(\r\n                <Photo \r\n                     key={picture.id}\r\n                     imageUrl={picture.photoUrl} \r\n                     category={picture.imageCategory} \r\n                     viewer={props.view}\r\n                     isAuth={props.isAuthenticated}\r\n                     isAdmin={props.isAdmin}\r\n                     click={()=>clicker(picture.photoUrl, picture.id)}\r\n                     delete={() => deleter(picture.id)} />\r\n            )\r\n        }\r\n    });\r\n\r\n\r\n    if(props.loading){\r\n        pictureData = <Spinner />\r\n    }\r\n\r\n    if(isDeleted){\r\n        pictureData = <Redirect to='/photo' /> \r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <div className={classes.Photos}>\r\n                {/* The Modal will pop up on click */}\r\n                <Modal show={props.viewing} modalClosed={props.viewHandlerClosed}>\r\n                    {/* The Photoviewer will be displayed on the popedup modal */}\r\n                    <PhotoViewer imageUrl={imageURL} imageID={imageID} />\r\n                </Modal>\r\n                <div className={classes.Photo}>\r\n                    {pictureData}\r\n                </div>\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isAuthenticated: state.auth.token !== null,\r\n        isAdmin: state.auth.isAdmin\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Photos);","import React from 'react';\r\nimport classes from './Logo.module.css';\r\n\r\nimport togajLogo from '../../assets/Images/togaj_logo_edited.png';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height, width: props.width}}>\r\n        <img src={togajLogo} alt='' />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}> \r\n            {props.children} \r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/' exact> Home </NavigationItem>\r\n        <NavigationItem link='/gallery'> Gallery </NavigationItem>\r\n        <NavigationItem link='/about'> About </NavigationItem>\r\n        <NavigationItem link='/contact'> Contact </NavigationItem>\r\n        {props.isAuthenticated && props.isAdminUser && props.isAuthenticated === props.isAdminUser ? <NavigationItem link='/photo'> ADD+ </NavigationItem> : null}\r\n        {!props.isAuthenticated ? \r\n            <NavigationItem link='/login'>Authenticate</NavigationItem> :\r\n            <NavigationItem link='/logout'>Logout</NavigationItem>}\r\n    </ul>\r\n);\r\n \r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\n\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.DesktopOnly}>\r\n            <Logo />\r\n        </div>\r\n\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} isAdminUser={props.isAdmin} />\r\n        </nav>\r\n    </header>\r\n);\r\n \r\nexport default toolbar;","import React from 'react';\r\nimport classes from './SideDrawer.module.css';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxilliary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    \r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth} />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default sideDrawer;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxilliary';\r\nimport classes from './Layout.module.css';\r\nimport logo from '../../assets/togaj_logo.png';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nconst Layout = (props) => {\r\n    const [ showSideDrawer, SetShowSideDrawer ] = useState(false);\r\n\r\n    const sideDrawerClosedHandler = () => {\r\n        SetShowSideDrawer(false);\r\n    }\r\n\r\n    const sideDrawerToggleHandler = () => {\r\n        SetShowSideDrawer(!showSideDrawer);\r\n    }\r\n \r\n    let header2 = (\r\n        <header className={classes.header2}>\r\n            <span onClick={() => props.sort('Weddings')}>Weddings</span> \r\n            <span onClick={() => props.sort('Birthdays')}>Birthdays</span> \r\n            <span onClick={() => props.sort('Graduations')}>Graduations</span> \r\n            <span onClick={() => props.sort('Others')}>Others</span>\r\n        </header>\r\n    );\r\n\r\n    //Passing the props below, to let page display specific headers in my layout\r\n\r\n    if(props.uploading){\r\n        header2 = <header className={classes.header3}>\r\n                    <h4>{props.header}</h4>\r\n                </header>;\r\n    }\r\n\r\n    if(props.contact){\r\n        header2 = <header className={classes.header3}>\r\n                    <h4>{props.header}</h4>\r\n                </header>;\r\n    }\r\n\r\n    return(\r\n        <Aux>\r\n            <Toolbar\r\n                isAuth={props.isAuthenticated} \r\n                isAdmin={props.isAdmin}\r\n                img={logo} \r\n                drawerToggleClicked={sideDrawerToggleHandler} />\r\n            <SideDrawer \r\n                open={showSideDrawer} \r\n                closed={sideDrawerClosedHandler}\r\n                isAuth={props.isAuthenticated} />\r\n            {header2}\r\n\r\n            <main className={classes.Content}>\r\n                {props.children}\r\n            </main>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isAuthenticated: state.auth.token !== null,\r\n        isAdmin: state.auth.isAdmin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n}\r\n\r\nexport const authSuccess = (token, userId, isAdmin) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId,\r\n        isAdmin: isAdmin\r\n    };\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('isAdmin');\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, adminCode, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            adminCode: adminCode\r\n        }\r\n\r\n        let url = 'http://localhost:3001/api/auth/signup';\r\n\r\n        if(!isSignUp){\r\n            url = 'http://localhost:3001/api/auth/login';\r\n        }\r\n\r\n        return axios.post(url, authData)\r\n            .then(response => {\r\n                try{\r\n                    const expirationTime = new Date(new Date().getTime() + 3600 * 1000);\r\n                    localStorage.setItem('token', response.data.token);\r\n                    localStorage.setItem('expirationTime', expirationTime );\r\n                    localStorage.setItem('userId', response.data.userId);\r\n                    localStorage.setItem('isAdmin', response.data.isAdmin);\r\n\r\n                    dispatch(authSuccess(response.data.token, response.data.userId, response.data.isAdmin));\r\n                    //Take note of the checkAuthTimeout. It affected my code previously..\r\n                    dispatch(checkAuthTimeout(3600));\r\n                    \r\n                }catch(error){\r\n                    \r\n                    console.log(response);\r\n                    console.log(error);\r\n                    console.log(\"I got here!\" + error.error);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                dispatch(authFail(error));\r\n            })\r\n        \r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        const adminStatus = localStorage.getItem('isAdmin');\r\n        if(!token){\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationTime = new Date(localStorage.getItem('expirationTime'));\r\n            if(expirationTime < new Date()){\r\n                dispatch(logout())\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId, adminStatus));\r\n                dispatch(checkAuthTimeout((expirationTime.getTime() - new Date().getTime())/1000));\r\n            }\r\n        }\r\n    }\r\n};","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const FETCH_START = 'FETCH_START';\r\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\r\nexport const FETCH_FAIL = 'FETCH_FAIL';\r\n\r\nexport const POST_PHOTO_START = 'POST_PHOTO_START';\r\nexport const POST_PHOTO_SUCCESS = 'POST_PHOTO_SUCCESS';\r\nexport const POST_PHOTO_FAIL = 'POST_PHOTO_FAIL';\r\n\r\nexport const CONTACT_START = 'CONTACT_START';\r\nexport const CONTACT_SUCCESS = 'CONTACT_SUCCESS';\r\nexport const CONTACT_FAIL = 'CONTACT_FAIL';","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from 'axios';\r\n\r\nimport Photos from '../../components/Photos/Photos';\r\nimport Layout from '../Layout/Layout';\r\nimport classes from './Gallery.module.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Gallery = (props) => {\r\n    const [ viewing, setViewing ] = useState(false);\r\n    const { pictures, loading, onFetch } = props;\r\n    const [ category, setCategory ] = useState('');\r\n    //The category above is storing the value gotten when i click the particular category i want to see\r\n\r\n    useEffect(() => {\r\n        onFetch();\r\n    }, [onFetch]);\r\n    \r\n    const viewHandler = () => {\r\n        //This is handling the way the modal that pops up the image works.\r\n        setViewing(true);\r\n    }\r\n\r\n    const viewHandlerClosed = () => {\r\n        //This is handling the way the modal that pops up the image works. When it is closed.\r\n        setViewing(false);\r\n    }\r\n\r\n    let photograph = <Spinner />\r\n\r\n    if(pictures){\r\n        photograph = (\r\n            <Photos \r\n                pictures={pictures} \r\n                sortCategory={category}\r\n                view={viewHandler} \r\n                loading={loading}\r\n                viewing={viewing}\r\n                viewHandlerClosed={viewHandlerClosed} />\r\n        )\r\n    }\r\n\r\n    const sorter = (cat) => {\r\n        //This function is handling the onClick function that is present in the Layout. It is referenced back to it.\r\n        setCategory(cat);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Gallery}>\r\n            <Layout sort={sorter}>\r\n                <div className={classes.PhotoDiv}>\r\n                    {photograph}\r\n                </div>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pictures: state.photo.pictures,\r\n        loading: state.photo.loading\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: () => (dispatch(actions.fetch()))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Gallery, axios));","import axios from 'axios';\r\n\r\nimport * as actionTypes from '../actions/actionTypes';\r\n\r\nexport const fetchStart = () => {\r\n    return{\r\n        type: actionTypes.FETCH_START\r\n    };\r\n};\r\n\r\nexport const fetchSuccess = (photoData) => {\r\n    return {\r\n        type: actionTypes.FETCH_SUCCESS,\r\n        pictures: photoData\r\n    };\r\n};\r\n\r\nexport const fetchFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const postPhotoStart = () => {\r\n    return {\r\n        type: actionTypes.POST_PHOTO_START\r\n    }\r\n}\r\n\r\nexport const postPhotoSuccess = (filePath, imageCategory) => {\r\n    return {\r\n        type: actionTypes.POST_PHOTO_SUCCESS,\r\n        filePath: filePath,\r\n        imageCategory: imageCategory\r\n    };\r\n};\r\n\r\nexport const postPhotoFail = (error) => {\r\n    return {\r\n        type: actionTypes.POST_PHOTO_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const postPhoto = (formData, token) => {\r\n    return dispatch => {\r\n        dispatch(postPhotoStart());\r\n\r\n        axios.post('http://localhost:3001/api/photos', formData, {\r\n                headers: {\r\n                    'Content-type': 'multi-part/form-data',\r\n                    'Authorization' : `Bearer ${token}`\r\n                },\r\n            }).then(res => {\r\n                const { filePath, imageCategory } = res.data;\r\n                dispatch(postPhotoSuccess(filePath, imageCategory));\r\n            }).catch(error => {\r\n                dispatch(postPhotoFail(error));\r\n            });\r\n    };\r\n}\r\n\r\nexport const fetch = () => {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n\r\n        axios.get('http://localhost:3001/api/photos')\r\n            .then(res => {\r\n                const fetchedData = [];\r\n                const photos = res.data;\r\n\r\n                photos.forEach(photo => {\r\n                    fetchedData.push({\r\n                        id: photo._id,\r\n                        photoUrl: photo.photoUrl,\r\n                        imageCategory: photo.imageCategory\r\n                    });\r\n                });\r\n                dispatch(fetchSuccess(fetchedData));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchFail(err));\r\n            })\r\n    }\r\n}","import React, { useState } from 'react';\r\n\r\nimport classes from './PhotoData.module.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Layout from '../Layout/Layout';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst PhotoData = (props) => {\r\n    const [ file, setFile ] = useState('');\r\n    const [ imageCategory, setImageCategory ] = useState('');\r\n    const [ fileName, setFileName ] = useState('Choose File');\r\n    const [ previewSource, setPreviewSource ] = useState();\r\n\r\n//========================================================================================================\r\n    const postHandler = event => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('file', file);\r\n        formData.append('imageCategory', imageCategory);\r\n\r\n        props.onPost(formData, props.token);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const photoFile = event.target.files[0];\r\n\r\n        setFile(event.target.files[0]);\r\n        setFileName(event.target.files[0].name);\r\n\r\n        previewFile(photoFile);\r\n    }\r\n\r\n    const onSelect = (event) => {\r\n        setImageCategory(event.target.value);\r\n    }\r\n\r\n    //The code below controls the previewing of the selected file on the page\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        }\r\n    }\r\n\r\n    let redirect = null;\r\n\r\n    if(props.loading){\r\n        redirect = <Spinner />\r\n    }\r\n\r\n    if(props.submitted){\r\n        redirect = <Redirect to='/gallery' />;\r\n    }\r\n//===================================================================================================\r\n//====================================================================================================\r\n\r\n\r\n    return(\r\n        <div className={classes.Gallery}>\r\n            <Layout uploading header='UPLOAD A PHOTOGRAPH'>\r\n                <div className={classes.ContactData}>\r\n                    <form onSubmit={postHandler}>\r\n                        <div className='custom-file mb-4'>\r\n                            <input \r\n                                required\r\n                                type='file'\r\n                                className='custom-file-input' \r\n                                id='customFile'\r\n                                onChange={onChange} />\r\n                            <label className='custom-file-label' htmlFor='customFile'>\r\n                                {fileName}\r\n                            </label>\r\n                            <div className={classes.DropDown}>\r\n                                <select id=\"inputState\" className=\"form-control\" onChange={onSelect}>\r\n                                    <option>Select Category...</option>\r\n                                    <option>Weddings</option>\r\n                                    <option>Birthdays</option>\r\n                                    <option>Graduations</option>\r\n                                    <option>Others</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <Button btnType=\"Danger\" >SUBMIT</Button>\r\n                    </form>\r\n                </div>\r\n            </Layout>\r\n            {previewSource && (\r\n                        <img src={previewSource} alt=\"chosen\" style={{height:'300px'}} />\r\n                    )}\r\n            {redirect}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filePath: state.photo.filePath,\r\n        imageCategory: state.photo.imageCategory,\r\n        loading: state.photo.loading,\r\n        submitted: state.photo.submitted,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPost: (formDataFile, token) => dispatch(actions.postPhoto(formDataFile, token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhotoData);","import React from 'react';\r\nimport classes from './input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.inValid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case('file'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case('password'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ( 'select' ) :\r\n            inputElement=(\r\n                <select className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                        {props.elementConfig.options.map(option => (\r\n                            <option key={option.value} value={option.value}>\r\n                                {option.displayValue}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            )\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n    }\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>\r\n                {props.label}\r\n            </label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './Login.module.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Layout from '../Layout/Layout';\r\nimport { Redirect } from 'react-router';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from 'axios';\r\n\r\nconst Login = (props) => {\r\n    //This part of the code creates the Input Elements. I am running three at the moment.\r\n    const [ dataForm, setDataForm ] = useState({\r\n        adminData: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Input your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'password',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Input your Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                    maxLength: 16\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            adminCode: {\r\n                elementType: 'password',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Admin Passcode'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 4,\r\n                    maxLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n        }\r\n    });\r\n\r\n    const [ formIsValid, setFormIsValid ] = useState(false);\r\n    //The isSignUp is used to check if its a Signup or Signin request.\r\n    const [ isSignUp, setIsSignUp ] = useState(true);\r\n\r\n//========================================================================================================\r\n//The function will check if the input is present and valid\r\n    const checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    const inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedDataForm = {\r\n            ...dataForm.adminData\r\n        }\r\n\r\n        const updatedFormElement = {\r\n            ...updatedDataForm[inputIdentifier]\r\n        };\r\n\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n\r\n        updatedDataForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for(let formIdentifier in updatedDataForm) {\r\n            formIdentifier = updatedDataForm[formIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        setDataForm({adminData: updatedDataForm});\r\n        setFormIsValid(formIsValid);\r\n    }\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        props.onAuth(dataForm.adminData.email.value, dataForm.adminData.password.value, dataForm.adminData.adminCode.value, isSignUp);\r\n    }\r\n\r\n    const switchAuthModeHandler = () => {\r\n        setIsSignUp(!isSignUp);\r\n    }\r\n\r\n    //===============================================================================================\r\n    let redirect = null;\r\n    let errorMessage = null;\r\n\r\n    if(props.loading){\r\n        redirect = <Spinner />\r\n    }\r\n\r\n    if(props.submitted){\r\n        redirect = <Redirect to='/gallery' />;\r\n    }\r\n\r\n    if(props.error){\r\n        errorMessage = (\r\n            <p>{props.error}</p>\r\n        )\r\n    }\r\n\r\n\r\n//===================================================================================================\r\n\r\n    const adminElementsArray = [];\r\n\r\n    for(let key in dataForm.adminData){\r\n        adminElementsArray.push({\r\n            id: key,\r\n            config: dataForm.adminData[key]\r\n        });\r\n    };\r\n//====================================================================================================\r\n\r\n\r\n    return(\r\n        <div className={classes.Gallery}>\r\n            <Layout uploading header='LOGIN'>\r\n                <div className={classes.ContactData}>\r\n                    {errorMessage}\r\n                    <form onSubmit={submitHandler}>\r\n                        {adminElementsArray.map(adminElement => (\r\n                            <Input \r\n                                key={adminElement.id}\r\n                                elementType={adminElement.config.elementType} \r\n                                elementConfig={adminElement.config.elementConfig} \r\n                                value={adminElement.config.value}\r\n                                inValid={!adminElement.config.valid}\r\n                                shouldValidate={adminElement.config.validation}\r\n                                touched={adminElement.config.touched}\r\n                                changed={(event)=> inputChangedHandler(event, adminElement.id)} />\r\n                        ))}\r\n\r\n                        <Button btnType=\"Success\" disabled={!formIsValid}>SUBMIT</Button>\r\n                    </form>\r\n                    <Button\r\n                        clicked={switchAuthModeHandler} \r\n                        btnType=\"Danger\">SWITCH TO {isSignUp ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n                </div>\r\n            </Layout>\r\n            {redirect}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        loading: state.auth.loading,\r\n        submitted: state.auth.submitted,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, adminCode, isSignUp) => dispatch(actions.auth(email, password, adminCode, isSignUp))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Login, axios));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nconst Logout = (props) => {\r\n    useEffect(() => {\r\n        props.onLogout()\r\n    }, [props]);\r\n\r\n    return <Redirect to='/' />\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport Aux from '../../hoc/Auxilliary';\r\nimport Layout from '../Layout/Layout';\r\nimport classes from './Contact.module.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n//The fontawesome embedded helps me select the icons i want to add\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPhoneAlt, faEnvelope, faClock } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst Contact = (props) => {\r\n    //The state below will monitor the form inputs\r\n    const [ contactForm, setContactForm ] = useState({\r\n        contactData: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            phoneNumber: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'tel',\r\n                    placeholder: 'Your Phone Number'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            message: {\r\n                elementType: 'textarea',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Your Message'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        }\r\n    });\r\n\r\n    const [ formIsValid, setFormIsValid ] = useState(false);\r\n\r\n    //======================================================================================================\r\n    //The function will check if the input is present and valid\r\n    const checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n\r\n    //This function monitors the form as characters are pressed.\r\n    const inputChangedHandler = (event, inputIdentifier) => {\r\n        //This will copy the the contact data objects, ie the name, phone number, email, message\r\n        const updatedContactForm = {\r\n            ...contactForm.contactData\r\n        }\r\n\r\n        //This will target the individual keys with their corresponding items. ie name: valid, validity etc\r\n        const updatedFormElement = {\r\n            ...updatedContactForm[inputIdentifier]\r\n        };\r\n\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n\r\n        updatedContactForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for(let formIdentifier in updatedContactForm) {\r\n            formIdentifier = updatedContactForm[formIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        setContactForm({contactData: updatedContactForm});\r\n        setFormIsValid(formIsValid);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const userDatails = {\r\n            name: contactForm.contactData.name.value,\r\n            phoneNumber: contactForm.contactData.phoneNumber.value,\r\n            email: contactForm.contactData.email.value,\r\n            message: contactForm.contactData.message.value\r\n        }\r\n        \r\n        props.onContact(userDatails);\r\n    }\r\n\r\n    let redirect = null;\r\n    let message = null;\r\n\r\n    if(props.loading){\r\n        redirect = <Spinner />\r\n    }\r\n\r\n    if(props.submitted){\r\n        message = `Your message with Id of ${props.userId} has been submitted successfully`;\r\n        redirect = <Redirect to='/gallery' />\r\n    }\r\n\r\n    //=======================================================================================================\r\n    //The array below will rearrange the contactForm into a object easy to manipulate. It is the second step\r\n    const contactElementsArray = [];\r\n\r\n    for(let key in contactForm.contactData){\r\n        contactElementsArray.push({\r\n            id: key,\r\n            config: contactForm.contactData[key]\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Aux>\r\n            <Layout contact header='Please Contact Us'>\r\n                <div className={classes.Contact}>\r\n                    <div>\r\n                        <p>Ogun, Nigeria</p>\r\n                    </div>\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faPhoneAlt} /> (+234) 80 998 239 86 <br />\r\n                        <FontAwesomeIcon icon={faEnvelope} /> Togajphotography21@gmail.com <br />\r\n                        <FontAwesomeIcon icon={faClock} />  Always Open\r\n                    </div>\r\n\r\n                    <div className={classes.Form}>\r\n                        {message}\r\n                        <form onSubmit={submitHandler}>\r\n                            {contactElementsArray.map(contactElement => (\r\n                                <Input \r\n                                    key={contactElement.id}\r\n                                    elementType={contactElement.config.elementType} \r\n                                    elementConfig={contactElement.config.elementConfig} \r\n                                    value={contactElement.config.value}\r\n                                    inValid={!contactElement.config.valid}\r\n                                    shouldValidate={contactElement.config.validation}\r\n                                    touched={contactElement.config.touched}\r\n                                    changed={(event)=> inputChangedHandler(event, contactElement.id)} />\r\n                            ))}\r\n\r\n                            <Button btnType=\"Success\" disabled={!formIsValid}>Contact US</Button>\r\n                        </form>\r\n                        {redirect}\r\n                    </div>\r\n                </div>\r\n                \r\n            </Layout>\r\n            \r\n        </Aux>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        userId: state.contact.userId,\r\n        loading: state.contact.loading,\r\n        submitted: state.contact.submitted\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onContact: (userDatails) => dispatch(actions.contact(userDatails))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const contactStart = () => {\r\n    return{\r\n        type: actionTypes.CONTACT_START\r\n    }\r\n};\r\n\r\n\r\nexport const contactSuccess = (userId) => {\r\n    return{\r\n        type: actionTypes.CONTACT_SUCCESS,\r\n        userId: userId\r\n    };\r\n}\r\n\r\nexport const contactFail = (error) => {\r\n    return{\r\n        type: actionTypes.FETCH_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const contact = (userDetails) => {\r\n    return dispatch => {\r\n        dispatch(contactStart());\r\n\r\n        axios.post('http://localhost:3001/api/contact', userDetails)\r\n            .then((res) => {\r\n                console.log(res);\r\n                dispatch(contactSuccess(res.data.messageId));\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(contactFail(err));\r\n            })\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './App.css';\r\n\r\nimport Landing from './containers/Landing/Landing';\r\nimport Gallery from './containers/Gallery/Gallery';\r\nimport PhotoData from './containers/PhotoData/PhotoData';\r\nimport Login from './containers/Login/Login';\r\nimport Logout from './containers/Login/Logout/Logout';\r\nimport Contact from './containers/Contact/Contact';\r\nimport * as actions from './store/actions/index';\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.onTryAutoSignUp()\r\n  });\r\n\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/gallery\" component={Gallery} />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/logout\" component={Logout} />\r\n      <Route path=\"/contact\" component={Contact} />\r\n      <Route path=\"/\" exact component={Landing} />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  )\r\n\r\n  if(props.isAuthenticated){\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/gallery\" component={Gallery} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/photo\" component={PhotoData} />\r\n        <Route path=\"/contact\" component={Contact} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        {routes}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    pictures: null,\r\n    filePath: null,\r\n    imageCategory: null,\r\n    error: null,\r\n    loading: null,\r\n    submitted: false,\r\n    filename: null,\r\n    filepath: null\r\n}\r\n\r\nconst fetchStart = (state, action) => {\r\n    return updateObject(state, {loading: true, submitted: false});\r\n};\r\n\r\nconst fetchSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        pictures: action.pictures,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst postPhotoStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        submitted: false\r\n    });\r\n}\r\n\r\nconst postPhotoSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        submitted: true,\r\n        filePath: action.filePath,\r\n        imageCategory: action.imageCategory\r\n    });\r\n}\r\n\r\nconst postPhotoFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n        submitted: false\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case (actionTypes.FETCH_START): return fetchStart(state, action);\r\n        case (actionTypes.FETCH_SUCCESS): return fetchSuccess(state, action);\r\n        case (actionTypes.FETCH_FAIL): return fetchFail(state, action);\r\n        case (actionTypes.POST_PHOTO_START): return postPhotoStart(state, action);\r\n        case (actionTypes.POST_PHOTO_SUCCESS): return postPhotoSuccess(state, action);\r\n        case (actionTypes.POST_PHOTO_FAIL): return postPhotoFail(state, action);\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    isAdmin: null,\r\n    error: null,\r\n    loading: null,\r\n    submitted: null\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: false, loading: true, submitted: false});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        //I was getting a 'true'from the isAdmin, so i decided to turn it to boolean here..\r\n        isAdmin: action.isAdmin === 'true',\r\n        error: null,\r\n        loading: false,\r\n        submitted: true\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n        submitted: false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null,\r\n        submitted: false\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case (actionTypes.AUTH_START): return authStart(state, action);\r\n        case (actionTypes.AUTH_SUCCESS): return authSuccess(state, action);\r\n        case (actionTypes.AUTH_FAIL): return authFail(state, action);\r\n        case (actionTypes.AUTH_LOGOUT): return authLogout(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    error: null,\r\n    loading: null,\r\n    submitted: null\r\n}\r\n\r\nconst contactStart = (state, action) => {\r\n    return updateObject(state, {error: false, loading: true, submitted: false});\r\n};\r\n\r\nconst contactSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false,\r\n        submitted: true\r\n    });\r\n};\r\n\r\nconst contactFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n        submitted: false\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case (actionTypes.CONTACT_START): return contactStart(state, action);\r\n        case (actionTypes.CONTACT_SUCCESS): return contactSuccess(state, action);\r\n        case (actionTypes.CONTACT_FAIL): return contactFail(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport photoReducer from './store/reducers/photos';\nimport authReducer from './store/reducers/auth';\nimport contactReducer from './store/reducers/contact';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducers = combineReducers({\n  photo: photoReducer,\n  auth: authReducer,\n  contact: contactReducer\n});\n\nconst store = createStore(rootReducers, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}